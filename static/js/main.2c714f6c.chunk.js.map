{"version":3,"sources":["TodoApp/Todo-Input.js","TodoApp/Todo-List.js","TodoApp/Container.js","index.js"],"names":["TodoInput","props","inputRef","React","createRef","this","current","focus","item","itemChange","submitChange","className","onSubmit","type","value","onChange","placeholder","ref","Component","TodoList","items","handleDelete","handleEdit","map","title","onClick","id","Container","state","uuidv4","editItem","bind","event","setState","target","preventDefault","newItem","updatedItems","filterItems","filter","selectItem","find","ReactDOM","render","document","getElementById"],"mappings":"+MAgCeA,E,kDA7BX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,SAAWC,IAAMC,YAFP,E,qDAMnB,WACIC,KAAKH,SAASI,QAAQC,U,oBAI1B,WAAS,MAEoCF,KAAKJ,MAAvCO,EAFF,EAEEA,KAAMC,EAFR,EAEQA,WAAYC,EAFpB,EAEoBA,aAGzB,OACI,qBAAKC,UAAU,aAAf,SACI,uBAAMC,SAAUF,EAAhB,UACI,uBAAOG,KAAK,OAAOC,MAAON,EAAMO,SAAUN,EAAYO,YAAY,gBAAgBC,IAAKZ,KAAKH,SAAUS,UAAU,qBAChH,qBAAKA,UAAU,cAAf,SACI,wBAAQE,KAAK,SAASF,UAAU,MAAhC,4B,GAtBAO,a,OCgCTC,E,4JA9BX,WAAS,MAEqCd,KAAKJ,MAAxCmB,EAFF,EAEEA,MAAOC,EAFT,EAESA,aAAcC,EAFvB,EAEuBA,WAE5B,OACI,sBAAKX,UAAU,YAAf,UACI,mBAAGA,UAAU,mBAAb,+BAEA,qBAAKA,UAAU,oBAAf,SAEOS,EAAMG,KAAI,SAAAf,GACN,OACI,sBAAmBG,UAAU,OAA7B,UACG,sBAAMA,UAAU,YAAhB,SAA6BH,EAAKgB,QAClC,sBAAKb,UAAU,aAAf,UACA,sBAAMA,UAAU,YAAYc,QAAS,kBAAKH,EAAWd,EAAKkB,KAA1D,SAA+D,cAAC,IAAD,MAE/D,sBAAMf,UAAU,cAAcc,QAAS,kBAAKJ,EAAab,EAAKkB,KAA9D,SAAmE,cAAC,IAAD,WAL5DlB,EAAKkB,gB,GAbvBR,a,QCwERS,E,kDApEX,WAAY1B,GAAQ,IAAD,8BACf,cAAMA,IACD2B,MAAQ,CACTpB,KAAM,GACNY,MAAO,GACPM,GAAIG,cACJC,UAAU,GAGd,EAAKrB,WAAa,EAAKA,WAAWsB,KAAhB,gBAClB,EAAKrB,aAAe,EAAKA,aAAaqB,KAAlB,gBACpB,EAAKV,aAAe,EAAKA,aAAaU,KAAlB,gBACpB,EAAKT,WAAa,EAAKA,WAAWS,KAAhB,gBAZH,E,8CAgBnB,SAAWC,GACP3B,KAAK4B,SAAS,CAAEzB,KAAMwB,EAAME,OAAOpB,U,0BAIvC,SAAakB,GACTA,EAAMG,iBAEN,IAAMC,EAAU,CACZZ,MAAOnB,KAAKuB,MAAMpB,KAClBkB,GAAIG,eAEFQ,EAAY,sBAAOhC,KAAKuB,MAAMR,OAAlB,CAAyBgB,IAC3C/B,KAAK4B,SAAS,CACVb,MAAOiB,EACP7B,KAAM,O,0BAId,SAAakB,GACT,IAAMY,EAAcjC,KAAKuB,MAAMR,MAAMmB,QAAO,SAAC/B,GAAD,OAAUA,EAAKkB,KAAOA,KAClErB,KAAK4B,SAAS,CAAEb,MAAOkB,M,wBAI3B,SAAWZ,GAEP,IAAMY,EAAcjC,KAAKuB,MAAMR,MAAMmB,QAAO,SAAC/B,GAAD,OAAUA,EAAKkB,KAAOA,KAE5Dc,EAAanC,KAAKuB,MAAMR,MAAMqB,MAAK,SAACjC,GAAD,OAAUA,EAAKkB,KAAOA,KAC/DrB,KAAK4B,SAAS,CACVzB,KAAMgC,EAAWhB,MAChBJ,MAAOkB,EACNZ,GAAIA,EACJI,UAAU,M,oBAOpB,WACI,OACI,sBAAKnB,UAAU,YAAf,UACG,mBAAGA,UAAU,cAAb,sCACA,cAAC,EAAD,CAAWH,KAAMH,KAAKuB,MAAMpB,KAAMC,WAAYJ,KAAKI,WAAYC,aAAcL,KAAKK,eAClF,cAAC,EAAD,CAAUU,MAAOf,KAAKuB,MAAMR,MAAOC,aAAchB,KAAKgB,aAAcC,WAAYjB,KAAKiB,oB,GAhE5EJ,a,MCCxBwB,IAASC,OACP,qBAAKhC,UAAU,OAAf,SACG,cAAC,EAAD,MAEHiC,SAASC,eAAe,W","file":"static/js/main.2c714f6c.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nclass TodoInput extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.inputRef = React.createRef()\r\n    }\r\n\r\n    //Creating Ref\r\n    componentDidMount() {\r\n        this.inputRef.current.focus();\r\n    }\r\n\r\n\r\n    render() {\r\n        //...\r\n        const {item, itemChange, submitChange} = this.props;\r\n        //..\r\n        \r\n        return (\r\n            <div className=\"todo-input\">\r\n                <form onSubmit={submitChange}>\r\n                    <input type=\"name\" value={item} onChange={itemChange} placeholder=\"add your plan\" ref={this.inputRef} className=\"todo-input-field\" />\r\n                    <div className=\"todo-button\">\r\n                        <button type=\"submit\" className=\"btn\">Add</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoInput\r\n","import React, { Component } from 'react'\r\nimport { FaTrash, FaEdit } from \"react-icons/fa\";\r\n\r\nclass TodoList extends Component {\r\n    render() {\r\n        //...\r\n        const {items, handleDelete, handleEdit} = this.props;\r\n        //...\r\n        return (\r\n            <div className=\"todo-list\">\r\n                <p className=\"todo-list-header\">my plan for today</p>\r\n\r\n                <div className=\"todo-list-content\">\r\n                   {\r\n                       items.map(item => {\r\n                           return (\r\n                               <div key={item.id} className=\"text\">\r\n                                  <span className=\"todo-text\">{item.title}</span>\r\n                                  <div className=\"todo-icons\">\r\n                                  <span className=\"btns edit\" onClick={()=> handleEdit(item.id)}><FaEdit  /></span>\r\n                                  \r\n                                  <span className=\"btns delete\" onClick={()=> handleDelete(item.id)}><FaTrash /></span>\r\n\r\n                                  </div>\r\n                               </div>\r\n                           )\r\n                       })\r\n                   }\r\n               </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoList\r\n","import React, { Component } from 'react'\r\nimport TodoInput from './Todo-Input'\r\nimport TodoList from './Todo-List'\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nclass Container extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            item: '',\r\n            items: [],\r\n            id: uuidv4(),\r\n            editItem: false,\r\n\r\n        }\r\n        this.itemChange = this.itemChange.bind(this);\r\n        this.submitChange = this.submitChange.bind(this);\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n        this.handleEdit = this.handleEdit.bind(this);\r\n    }\r\n\r\n    //item change handler\r\n    itemChange(event) {\r\n        this.setState({ item: event.target.value })\r\n    }\r\n\r\n    //Submit Form handler\r\n    submitChange(event) {\r\n        event.preventDefault();\r\n\r\n        const newItem = {\r\n            title: this.state.item,\r\n            id: uuidv4(),\r\n        }\r\n        const updatedItems = [...this.state.items, newItem];\r\n        this.setState({\r\n            items: updatedItems,\r\n            item: ''\r\n        });\r\n    }\r\n\r\n    handleDelete(id) {\r\n        const filterItems = this.state.items.filter((item) => item.id !== id );\r\n        this.setState({ items: filterItems })\r\n    }\r\n\r\n    //Edit the Todo item\r\n    handleEdit(id) {\r\n        //delete the selected item\r\n        const filterItems = this.state.items.filter((item) => item.id !== id );\r\n        //select for editing\r\n        const selectItem = this.state.items.find((item) => item.id === id );\r\n        this.setState({ \r\n            item: selectItem.title,\r\n             items: filterItems,\r\n              id: id,\r\n              editItem: true,\r\n        })\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n               <p className=\"header-text\">make your plan for today</p>\r\n               <TodoInput item={this.state.item} itemChange={this.itemChange} submitChange={this.submitChange} />\r\n               <TodoList items={this.state.items} handleDelete={this.handleDelete} handleEdit={this.handleEdit} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Container\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Container from './TodoApp/Container';\nimport './TodoApp/Style.css';\n\n\nReactDOM.render(\n  <div className=\"body\">\n     <Container />\n  </div>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}